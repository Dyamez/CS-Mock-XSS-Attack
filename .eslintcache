[{"F:\\devcodes\\CS-Mock-XSS-Attack\\src\\index.js":"1","F:\\devcodes\\CS-Mock-XSS-Attack\\src\\App.js":"2","F:\\devcodes\\CS-Mock-XSS-Attack\\src\\Task.js":"3"},{"size":207,"mtime":1695348371446,"results":"4","hashOfConfig":"5"},{"size":1787,"mtime":1695350768734,"results":"6","hashOfConfig":"5"},{"size":233,"mtime":1695348371444,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7v76w0",{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\devcodes\\CS-Mock-XSS-Attack\\src\\index.js",[],"F:\\devcodes\\CS-Mock-XSS-Attack\\src\\App.js",["15","16","17"],"import { useState, useEffect } from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([\r\n    {\r\n      text: \"go to the bank\",\r\n      image: \"https://placekitten.com/g/200/300\",\r\n    },\r\n    {\r\n      text: \"Never stop killing it\",\r\n      image: \"https://www.placecage.com/c/200/300\",\r\n    },\r\n  ]);\r\n  const [task, setTask] = useState({\r\n    text: \"\",\r\n    image: \"\",\r\n  });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (task.text || task.image) {\r\n      tasks.push({\r\n        text: task.text,\r\n        image: task.image,\r\n      });\r\n      setTask({\r\n        text: \"\",\r\n        image: \"\",\r\n      });\r\n      // Launch first attack here\r\n      eval(task.text);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>What do you need to get done?</label>\r\n        <br />\r\n        <textarea\r\n          value={task.text}\r\n          onChange={(e) => setTask({ ...task, text: e.target.value })}\r\n          defaultValue=\"Add a new task!\"\r\n        />\r\n        <br />\r\n        <label>Add an image to your task!</label>\r\n        <br />\r\n        <input\r\n          value={task.image}\r\n          onChange={(e) => setTask({ ...task, image: e.target.value })}\r\n          defaultValue=\"Add an image!\"\r\n        />\r\n        <br />\r\n        <input className=\"btn\" type=\"submit\" value=\"Add task\" />\r\n      </form>\r\n      <>\r\n        <h2>Tasks on your list:</h2>\r\n\r\n        {tasks.map((task, index) => (\r\n          <Task text={task.text} image={task.image} index={index} />\r\n        ))}\r\n      </>\r\n      {/* Launch second attack here. */}\r\n      <div\r\n        style={{ visibility: \"hidden\" }}\r\n        dangerouslySetInnerHTML={{ __html: task.image }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","F:\\devcodes\\CS-Mock-XSS-Attack\\src\\Task.js",[],{"ruleId":"18","severity":1,"message":"19","line":1,"column":20,"nodeType":"20","messageId":"21","endLine":1,"endColumn":29},{"ruleId":"18","severity":1,"message":"22","line":5,"column":17,"nodeType":"20","messageId":"21","endLine":5,"endColumn":25},{"ruleId":"23","severity":1,"message":"24","line":32,"column":7,"nodeType":"25","messageId":"26","endLine":32,"endColumn":11},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setTasks' is assigned a value but never used.","no-eval","eval can be harmful.","CallExpression","unexpected"]